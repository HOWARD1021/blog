{"version":3,"sources":["nav/Nav.js","about/index.js","home/index.js","post/index.js","post_list/index.js","send/index.js","App.js","serviceWorker.js","index.js"],"names":["Content","this","props","to","children","exact","path","match","className","Component","Nav","About","Home","style","fontSize","paddingTop","background","minHeight","Post","state","post","img","postId","params","fetch","then","response","json","setState","id","location","hash","slice","res","result","urls","regular","src","alt","title","body","Post_list","posts","imgs","history","map","index","key","onClick","push","small","withRouter","Send","handleTitleChange","e","target","name","value","handleSubmit","method","headers","JSON","stringify","author","console","log","catch","alert","onChange","App","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6d9b68cd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link,Route} from \"react-router-dom\";\n\nimport './Nav.css'\n\nclass Content extends Component{\n    render(){\n    const {to,children,exact} = this.props        \n    return(\n        <Route\npath= {to}\nexact ={exact}\nchildren = {({match})=>(\n<li className = {match ? \"active\": \"\"}>\n <Link to ={to}>\n {children}\n </Link>\n </li>\n           )}\n         />\n    )\n  }\n}\n\nclass Nav extends Component{\n    render(){\n        return (            \n<nav className =\"nav\">\n\n<ul className = 'nav__list'>\n<h2>Blog</h2>\n<Content  exact = {true} to= '/'>\nHome\n</Content>    \n<Content  to = '/about'>\nAbout\n</Content>    \n<Content  to = \"/post\">\nPost\n</Content>    \n<Content  to = \"/send\">\nSend Post\n</Content>    \n\n</ul>    \n</nav>\n            )\n    }\n}\n\nexport default Nav;\n\n\n","import React, { Component } from 'react'\nimport './About.css'\n\n\nclass About extends Component {\n  render(){\n    return (\n     <div className='about'>\n      <h1>About</h1>  \n<h4>摳印這個深夜節目協助整 </h4>\n<h4>理話題 把 腦袋思緒節錄</h4>\n<h4>打進來先空幾拍 等待廣告時間結束</h4>    \n<h4>問題先生先說（嗨） 等我說開始別搶拍</h4>\n<h4>抓準時機把你接住</h4>\n<h4>四散的煙霧 攀附 提問是天賦</h4>\n<h4>要怎麽 要 要怎麼保持不墜落</h4>      \n    </div>\n    );\n  }\n}\nexport default About;\n","import React, { Component } from 'react'\n\n\nclass Home extends Component {\n  render(){\n  const style ={\n  \thomepage:{\n  \t\tfontSize:'40px',\n  \t\tpaddingTop:'50px',\n      background: '#ead1d6',\n      minHeight: 'calc(100vh)'\n  \t}\n  }\n  return (\n    <div className='Home'>\n      <h1 style={style.homepage}>歡 迎你來\n</h1>  \n    </div>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from 'react'\nimport './Post.css'\nimport {Link} from \"react-router-dom\";\nclass Post extends Component {\nconstructor(){\n  super()\n  this.state={\n    post:[],\n    img:[],\n  }\n}\n// componentDidMount : 當 component 實例 instance 建立時 並顯示在 DOM 上面 \n// setState  posts 為 json  \ncomponentDidMount(){\n  const postId = this.props.match.params.postId\n  fetch('https://qootest.com/posts/' + postId)\n  .then(response => response.json())\n  .then(json => this.setState({\n    post:json\n  }));\n  const hash = this.props.location.hash\n  const id = hash.slice(1);\n  fetch('https://api.unsplash.com/photos/?client_id=gLUTihYJ7yJzkHV1rKaXhhA65yA1ELgWvkAgkB3SQqY&per_page=30&order_by=oldest')\n  .then(res => res.json())\n  .then(\n    (result) => {\n      this.setState({\n        img: result[id].urls.regular,\n      }); \n    }\n  )\n}\n\nrender(){\n  const {post,img} =this.state\n  return(\n<div className='Post__Content'> \n    <h1 >Post</h1>\n{img ? <img  src={img} alt=\"\" /> : <img src=\"https://reurl.cc/drDEp6\" alt=\"\" />}\n    <div className = 'Post__Title'>\n    <h1 >{post.title&&img  ? post.title:'loading...'  }</h1>\n    </div>\n    <div className='Post__body'>\n    <p>{post.body}</p>\n    </div>\n    <Link className='Post__button' to='/post'>Back</Link>  \n    </div>\n    )\n  }\n}\n\nexport default Post;\n\n\n\n\n","import React, { Component } from 'react'\nimport './Post_list.css'\nimport {withRouter} from \"react-router-dom\";\n\nclass Post_list extends Component {\nconstructor(){\n  super()\n  this.state={\n    posts:[],\n    img:[]\n  }\n}\n// 串接 兩個 api 一個為 留言內容 另一項為 圖片\ncomponentDidMount() {\n    fetch('https://api.unsplash.com/photos/?client_id=gLUTihYJ7yJzkHV1rKaXhhA65yA1ELgWvkAgkB3SQqY&per_page=30&order_by=oldest')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            imgs: result,\n          });\n          let post_url = '?_sort=id&_order=desc&_limit=30'\n          fetch('https://qootest.com/posts/'+ post_url)\n            .then(res => res.json())\n            .then(\n              (json) => {\n                this.setState({\n                  posts: json,\n                });\n              },\n            );\n        },\n      );\n  }\n\n\n\nrender(){\n  const {posts,imgs} =this.state\n  const {history} = this.props\n  return(\n  <div className='Post__Content' >\n    {posts.map((post,index) =>(\n     <div className = 'Post__item' key={index} \n     onClick = {()=>{\n      history.push(`/post/${post.id}#${index}`)}\n    }>\n      <div className='preview'>\n{imgs[index] ? <img src={imgs[index].urls.small} alt=\"\" /> : <img src=\"https://reurl.cc/drDEp6\" alt=\"\" />}\n       </div>\n       <div className='Post__title'>\n       {!post.title  ? <div className='Post__title'>無標題</div>:<div className='Post__title'>{post.title}</div>}\n        </div>\n     </div>      \n     ))}\n  </div>\n    )\n  } \n}\n\nexport default withRouter(Post_list);\n\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom'; // higher older component\nimport {Link} from \"react-router-dom\";\nimport './Send.css'\nclass Send extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title : '',\n      body  : '',\n    };\n  }\n\nhandleTitleChange  =(e) =>{\n  this.setState({\n    [e.target.name] : e.target.value\n  })\n}\n\n\nhandleSubmit =() =>{\n    const {title , body } = this.state\nfetch('https://qootest.com/posts',{\nmethod:'POST',\nheaders:{\n  'Content-Type': 'application/json'\n},\nbody:JSON.stringify({\ntitle:title,\nbody:body,\nauthor: 'user01'\n})\n}).then(res => {\n    return res.json();   // 使用 json() 可以得到 json 物件\n}).then(()=> {console.log('success')\n}).catch(()=>{alert('fail')}) \n\n}\n\n  render() {\n    const {title , body } = this.state\n    return (\n      <div className=\"container\">\n        <h3>Blog Posts</h3>\n        \n        <div className=\"Post__textarea\">\n        title:\n        <textarea  name ='title' value = {title} onChange = {this.handleTitleChange}/>\n        </div>\n        <div className=\"Post__input\">\n        body:\n        <input  name ='body' value ={body} onChange = {this.handleTitleChange}/>        \n        </div>\n        <button className='Post__submit' onClick ={this.handleSubmit}><Link  className='Post__submit' to='/post'>submit </Link></button> \n\n      </div>\n    );\n  }\n}\n\nexport default Send;","import React from 'react'\nimport './App.css';\nimport Nav from './nav'; \nimport About from './about'; \nimport Home from './home';\nimport Post from './post';\nimport Post_list from './post_list';\nimport Send from './send';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\n\n// 設定用來判斷 路由的 tab\n// 使用 window.location.hash 可以獲得現在的 #hashtag 字元  \nfunction App(props) {\n    return (\n     <Router>\n    <div className='App'>\n    <Nav/>\n    <div className='page'> \n<Switch>\n<Route exact path=\"/\" component={Home}/>\n<Route path=\"/about\" component={About}/>\n<Route exact path=\"/post\" component={Post_list}/>\n<Route exact path=\"/post/:postId\" component={Post}/>\n<Route path=\"/send\" component={Send}/>\n</Switch>\n    </div>\n    </div>\n    </Router>\n    );\n} \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}